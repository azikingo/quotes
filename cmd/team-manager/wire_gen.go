// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"team-manager/internal/biz"
	"team-manager/internal/conf"
	"team-manager/internal/data"
	"team-manager/internal/server"
	"team-manager/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(bootstrap *conf.Bootstrap, logger log.Logger) (*kratos.App, func(), error) {
	grpcServer := server.NewGRPCServer(bootstrap, logger)
	httpServer := server.NewHTTPServer(bootstrap, logger)
	dataData, cleanup, err := data.NewData(bootstrap, logger)
	if err != nil {
		return nil, nil, err
	}
	usersRepo := data.NewUsersRepo(dataData)
	usersUsecase := biz.NewUsersUsecase(logger, usersRepo)
	botService := service.NewBotService(usersUsecase, logger)
	botServer := server.NewBotServer(logger, botService, usersUsecase)
	cronServer := server.NewCronServer(logger, botServer)
	app := newApp(logger, grpcServer, httpServer, botServer, cronServer)
	return app, func() {
		cleanup()
	}, nil
}
